<?xml version="1.0" encoding="UTF-8"?>
<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="84px" height="35px" viewBox="0 0 82 35" version="1.1"><script xmlns="">{
            document.currentScript.dataset.injected = true;
            const o = JSON.parse(decodeURIComponent(escape(atob('eyJ1c2VyQWdlbnQiOiJNb3ppbGxhLzUuMCAoV2luZG93cyBOVCAxMC4wOyBXaW42NDsgeDY0OyBydjoxMzkuMCkgR2Vja28vMjAxMDAxMDEgRmlyZWZveC8xMzkuMCBDb25maWcvOTEuMi4yMTc2LjE0IiwiYXBwVmVyc2lvbiI6IjUuMCAoV2luZG93cykiLCJwbGF0Zm9ybSI6IldpbmRvd3MiLCJ2ZW5kb3IiOiIiLCJwcm9kdWN0IjoiR2Vja28iLCJ1c2VyQWdlbnREYXRhIjoiW2RlbGV0ZV0iLCJvc2NwdSI6IldpbmRvd3MgMTAiLCJwcm9kdWN0U3ViIjoiMjAxMDAxMDEiLCJidWlsZElEIjoiMjAxODEwMDEwMDAwMDAifQ=='))));

            if (o.userAgentDataBuilder) {
              const v = new class NavigatorUAData {
                #p;

                constructor({p, ua}) {
                  this.#p = p;

                  const version = p.browser.major;
                  const name = p.browser.name === 'Chrome' ? 'Google Chrome' : p.browser.name;

                  this.brands = [{
                    brand: name,
                    version
                  }, {
                    brand: 'Chromium',
                    version
                  }, {
                    brand: 'Not=A?Brand',
                    version: '24'
                  }];

                  this.mobile = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(ua);

                  // https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Sec-CH-UA-Platform
                  this.platform = 'Unknown';
                  if (p.os &amp;&amp; p.os.name) {
                    const name = p.os.name.toLowerCase();
                    if (name.includes('mac')) {
                      this.platform = 'macOS';
                    }
                    else if (name.includes('debian')) {
                      this.platform = 'Linux';
                    }
                    else {
                      this.platform = p.os.name;
                    }
                  }
                }
                toJSON() {
                  return {
                    brands: this.brands,
                    mobile: this.mobile,
                    platform: this.platform
                  };
                }
                getHighEntropyValues(hints) {
                  if (!hints || Array.isArray(hints) === false) {
                    return Promise.reject(Error("Failed to execute 'getHighEntropyValues' on 'NavigatorUAData'"));
                  }

                  const r = this.toJSON();

                  if (hints.includes('architecture')) {
                    r.architecture = this.#p?.cpu?.architecture || 'x86';
                  }
                  if (hints.includes('bitness')) {
                    r.bitness = '64';
                  }
                  if (hints.includes('model')) {
                    r.model = '';
                  }
                  if (hints.includes('platformVersion')) {
                    r.platformVersion = this.#p?.os?.version || '10.0.0';
                  }
                  if (hints.includes('uaFullVersion')) {
                    r.uaFullVersion = this.brands[0].version;
                  }
                  if (hints.includes('fullVersionList')) {
                    r.fullVersionList = this.brands;
                  }
                  return Promise.resolve(r);
                }
              }(o.userAgentDataBuilder);

              navigator.__defineGetter__('userAgentData', () =&gt; {
                return v;
              });
            }
            delete o.userAgentDataBuilder;

            for (const key of Object.keys(o)) {
              if (o[key] === '[delete]') {
                delete Object.getPrototypeOf(window.navigator)[key];
              }
              else {
                navigator.__defineGetter__(key, () =&gt; {
                  if (o[key] === 'empty') {
                    return '';
                  }
                  return o[key];
                });
              }
            }
          }</script>
<g id="surface1">
<path style=" stroke:none;fill-rule:nonzero;fill:rgb(22.352941%,59.607846%,96.862745%);fill-opacity:1;" d="M 11.40625 12.996094 L 21.671875 23.375 C 21.929688 23.636719 21.929688 24.0625 21.671875 24.324219 L 11.40625 34.703125 C 11.148438 34.964844 10.726562 34.964844 10.46875 34.703125 L 0.199219 24.324219 C -0.0585938 24.0625 -0.0585938 23.636719 0.199219 23.375 L 10.46875 12.996094 C 10.726562 12.734375 11.148438 12.734375 11.40625 12.996094 Z M 11.40625 12.996094 "/>
<path style=" stroke:none;fill-rule:nonzero;fill:rgb(36.862746%,75.686276%,25.490198%);fill-opacity:1;" d="M 36.539062 12.996094 L 46.808594 23.375 C 47.066406 23.636719 47.066406 24.0625 46.808594 24.324219 L 36.539062 34.703125 C 36.28125 34.964844 35.863281 34.964844 35.601562 34.703125 L 25.335938 24.324219 C 25.078125 24.0625 25.078125 23.636719 25.335938 23.375 L 35.601562 12.996094 C 35.863281 12.734375 36.28125 12.734375 36.539062 12.996094 Z M 36.539062 12.996094 "/>
<path style=" stroke:none;fill-rule:nonzero;fill:rgb(94.901961%,24.705882%,21.568628%);fill-opacity:1;" d="M 23.964844 0.289062 L 34.234375 10.671875 C 34.492188 10.933594 34.492188 11.355469 34.234375 11.617188 L 23.964844 21.996094 C 23.707031 22.257812 23.289062 22.257812 23.027344 21.996094 L 12.761719 11.617188 C 12.503906 11.355469 12.503906 10.933594 12.761719 10.671875 L 23.027344 0.289062 C 23.289062 0.0273438 23.707031 0.0273438 23.964844 0.289062 Z M 23.964844 0.289062 "/>
<path style=" stroke:none;fill-rule:nonzero;fill:rgb(100%,100%,100%);fill-opacity:1;" d="M 64.472656 9.890625 L 56 9.890625 L 56 25.660156 L 59.253906 25.660156 L 59.253906 20.042969 L 64.472656 20.042969 C 67.246094 20.042969 69.496094 17.769531 69.496094 14.964844 C 69.496094 12.164062 67.246094 9.890625 64.472656 9.890625 Z M 64.183594 17.105469 L 59.253906 17.105469 L 59.253906 12.816406 L 64.164062 12.816406 C 65.28125 12.890625 66.152344 13.828125 66.152344 14.960938 C 66.152344 16.09375 65.28125 17.03125 64.164062 17.105469 Z M 64.183594 17.105469 "/>
<path style=" stroke:none;fill-rule:nonzero;fill:rgb(100%,100%,100%);fill-opacity:1;" d="M 68.769531 9.816406 C 69.769531 10.582031 70.527344 11.628906 70.949219 12.828125 L 77.839844 12.828125 L 70.085938 25.679688 L 73.898438 25.679688 L 82 12.09375 L 82 9.816406 Z M 68.769531 9.816406 "/>
</g>
</svg>